<%- include("./layouts/header.ejs") %>

<section class="half-section">
  <div class="profile">
    <div class="title">
      <div class="color-box"></div>
      <p class="title-name">Place Your Order</p>
    </div>

    <div class="coupon-card wallet-card">
      <h4 class="coupon-head">BuyIt Wallet</h4>
      <p class="coupon-text">Your Balance</p>
      <p class="disc-price">₹<%= wallet.amount %></p>
      <p class="coupon-text">Your userId</p>
      <p class="coupon-code"><%= user._id %></p>
    </div>

    <form class="edit-profile" action="/user/updateUserData" method="POST">
      <p class="off-price">Address</p>
      <div class="field-container">
        <label>Username</label>
        <input type="text" name="username" value="<%= user.username %>" />
      </div>
      <div class="field-container">
        <label>Phone with country code</label>
        <input type="text" name="phone" value="<%= user.phone || '' %>" />
      </div>
      <div class="field-container">
        <label>Address</label>
        <input type="text" name="address" value="<%= user.address || '' %>" />
      </div>
      <div class="field-container">
        <label>District</label>
        <input type="text" name="district" value="<%= user.district || '' %>" />
      </div>
      <div class="field-container">
        <label>State</label>
        <input type="text" name="state" value="<%= user.state || '' %>" />
      </div>
      <div class="field-container">
        <label>Pincode</label>
        <input type="text" name="pincode" value="<%= user.pincode || '' %>" />
      </div>
      <ul class="panel cart-panel">
        <li>
          <button
            class="btn cancel-btn"
            type="button"
            onclick="window.location.reload();"
          >
            Cancel
          </button>
        </li>
        <li>
          <button class="btn save-btn" type="submit">Save Changes</button>
        </li>
      </ul>
    </form>
  </div>
  <div class="payment">
    <table class="cart-table">
      <thead>
        <tr>
          <th>Product</th>
          <th>Quantity</th>
          <th>Subtotal</th>
        </tr>
      </thead>
      <tbody>
        <% cartItems.forEach(item => { %>
        <tr>
          <td class="user-panel panel">
            <a href="/user/product/<%= item._id %>">
              <img
                src="<%= item.images.length > 0 ? item.images[0] : '/assets/default-image.avif' %>"
                alt=""
                class="product-img-small"
              />
              <p><%= item.name %></p>
            </a>
          </td>
          <td class="subtotal">
            <p><%= item.quantity %></p>
          </td>
          <td class="subtotal">
            ₹<%= ((item.price - (item.price * (item.offer / 100))) *
            item.quantity).toFixed(0) %>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>

    <!-- Coupon Form -->
    <form action="/user/applyCoupon" method="POST">
      <div class="panel apply-coupon">
        <input type="text" name="couponCode" placeholder="coupon code" />
        <input type="hidden" name="price" id="hidden-price" value="" />
        <button type="submit" class="btn save-btn">Apply Coupon</button>
      </div>
    </form>

    <div class="panel amount-panel Price-panel">
      <p>Total</p>
      <p class="amount price">₹<span id="total-amount">0</span></p>
    </div>
    <div class="panel amount-panel Price-panel">
      <p>Coupon Code</p>
      <p class="amount price">
        <span id="c-code"><%= couponCode || 'No coupon applied' %></span>
      </p>
    </div>

    <div class="panel amount-panel discount-panel">
      <p>Discount</p>
      <p class="amount discount">
        ₹<span id="discount-amount"><%= discount %></span>
      </p>
    </div>
    <div class="panel amount-panel total-panel">
      <p>Amount to pay</p>
      <p class="amount total">₹<span id="amount-to-pay">0</span></p>
    </div>

    <!-- Purchase Form -->
    <form id="purchase-form" action="" method="POST">
      <input type="hidden" name="userId" value="<%= user._id %>" />
      <input type="hidden" name="username" value="<%= user.username %>" />
      <input type="hidden" name="phone" value="<%= user.phone || '' %>" />
      <input type="hidden" name="address" value="<%= user.address || '' %>" />
      <input type="hidden" name="district" value="<%= user.district || '' %>" />
      <input type="hidden" name="state" value="<%= user.state || '' %>" />
      <input type="hidden" name="pincode" value="<%= user.pincode || '' %>" />
      <input type="hidden" name="couponId" value="<%= couponCode || '' %>" />
      <input
        type="hidden"
        name="amountToPay"
        id="hidden-amount-to-pay"
        value="0"
      />
      <input
        type="hidden"
        id="razorpay_payment_id"
        name="razorpay_payment_id"
      />
      <input type="hidden" id="razorpay_order_id" name="razorpay_order_id" />
      <input type="hidden" id="razorpay_signature" name="razorpay_signature" />

      <% cartItems.forEach((item, index) => { %>
      <input
        type="hidden"
        name="items[<%= index %>][productId]"
        value="<%= item._id %>"
      />
      <input
        type="hidden"
        name="items[<%= index %>][quantity]"
        value="<%= item.quantity %>"
      />
      <input
        type="hidden"
        name="items[<%= index %>][color]"
        value="<%= item.color %>"
      />
      <% }) %>

      <ul class="panel size-panel">
        <li><p>Payment Method:</p></li>
        <li>
          <input type="radio" name="paymentMethod" value="WALLET" id="wallet" />
          <label class="size-div" for="wallet">Wallet</label>
        </li>
        <li>
          <input type="radio" name="paymentMethod" value="UPI" id="upi" />
          <label class="size-div" for="upi">UPI</label>
        </li>
        <li>
          <input type="radio" name="paymentMethod" value="COD" id="cod" />
          <label class="size-div" for="cod">COD</label>
        </li>
      </ul>

      <button type="button" class="btn buy-now" onclick="submitPurchaseForm()">
        Buy Now
      </button>
    </form>
  </div>
</section>

<script>
  function updateTotal() {
    const subtotalElements = document.querySelectorAll(".subtotal");
    let total = 0;

    subtotalElements.forEach((element) => {
      const subtotal = parseFloat(element.textContent.replace("₹", ""));
      total += subtotal;
    });

    const discount =
      parseFloat(document.getElementById("discount-amount").textContent) || 0;
    const amountToPay = total - discount;

    document.getElementById("total-amount").textContent = total.toFixed(0);
    document.getElementById("amount-to-pay").textContent =
      amountToPay.toFixed(0);
    document.getElementById("hidden-amount-to-pay").value =
      amountToPay.toFixed(0);

    // Set the hidden price input for coupon application
    document.getElementById("hidden-price").value = total.toFixed(0);
  }

  document.addEventListener("DOMContentLoaded", updateTotal);
</script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  async function createRazorpayOrder(
    amountToPay,
    userId,
    username,
    phone,
    address,
    district,
    state,
    pincode,
    items
  ) {
    try {
      const response = await fetch("/user/purchaseUpi", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          amountToPay,
          userId,
          username,
          phone,
          address,
          district,
          state,
          pincode,
          items,
        }),
      });
      const order = await response.json();
      console.log("Razorpay Order:", order); // Debugging statement
      return order;
    } catch (error) {
      console.error("Error creating Razorpay order:", error);
      throw error;
    }
  }

  function submitPurchaseForm() {
  const selectedPaymentMethod = document.querySelector(
    'input[name="paymentMethod"]:checked'
  )?.value;

  const form = document.getElementById("purchase-form");

  if (!selectedPaymentMethod) {
    alert("Please select a payment method.");
    return;
  }

  if (selectedPaymentMethod === "COD") {
    form.action = "/user/purchaseCod";
    form.submit();
  } else if (selectedPaymentMethod === "UPI") {
    const amountToPay = document.getElementById("hidden-amount-to-pay").value;
    const items = Array.from(document.querySelectorAll('input[name^="items"]'))
      .reduce((acc, input) => {
        const match = input.name.match(/items\[(\d+)\]\[(.+)\]/);
        if (match) {
          const index = match[1];
          const key = match[2];
          acc[index] = acc[index] || {};
          acc[index][key] = input.value;
        }
        return acc;
      }, []);

    createRazorpayOrder(
      amountToPay,
      form.userId.value,
      form.username.value,
      form.phone.value,
      form.address.value,
      form.district.value,
      form.state.value,
      form.pincode.value,
      items
    )
      .then((order) => {
        if (!order) throw new Error("Failed to create Razorpay order.");

        const options = {
          key: "<%= process.env.RAZORPAY_KEY_ID %>",
          amount: order.amount,
          currency: order.currency,
          name: "Your Company Name",
          description: "Payment for your order",
          image: "https://example.com/your_logo",
          order_id: order.orderId,
          handler: function (response) {
            console.log("Payment Successful:", response);
            document.getElementById("razorpay_payment_id").value =
              response.razorpay_payment_id;
            document.getElementById("razorpay_order_id").value =
              response.razorpay_order_id;
            document.getElementById("razorpay_signature").value =
              response.razorpay_signature;
            form.action = "/user/verifyPayment";
            form.method = "POST";
            form.submit();
          },
          prefill: {
            name: order.username,
            email: "test@example.com",
            contact: order.phone,
          },
          notes: { address: order.address },
          theme: { color: "#3399cc" },
        };
        const rzp1 = new Razorpay(options);
        rzp1.open();
      })
      .catch((error) => {
        console.error("Error creating Razorpay order:", error);
        alert("Unable to process your payment. Please try again later.");
      });
  } else if (selectedPaymentMethod === "WALLET") {
    form.action = "/user/purchaseWallet";
    form.submit();
  }
}

</script>

<%- include("./layouts/footer.ejs") %>
